<h2 class="page-header">{{user.name}} <span style="color: blue">(@{{user.username}})</span></h2>
<div class="col-lg-6" id="friendlist" style="text-align: center; chatscrollbar">
	<h3 style="background-color: whitesmoke; padding: 10px; border-radius: 5px; border: 1px solid lightgray">My Friends</h3>
	<ul class="mCustomScrollbar" id="friendsList">
        {{#each user.friendsList }}  
	<p>
		<li class="friendsList" data-id="{{this.friendName}}">
        <input type="submit" id="to" class="btn btn-primary chat-submit" value="{{this.friendName}}" style="border: 1px solid #2d2d2d ; padding: 6px 12px; cursor: pointer; color: #ccc;">
		</li>
	</p>
	{{/each}}
    </ul>
</div>
<div class="col-lg-6" id="chatData">
        <input  id="from" type="text" placeholder="Enter Your Name.." value="{{user.username}}" required/>
        <input  id="data-id"  id="user_Id"  data-id="{{this.friendName}}" value='{{this.friendName}}' type="text" placeholder="Enter Who You are Sending to.." value="{{this.friendName}}" required>
	<div class="chat-messages"></div>
      <form methos="post" id="chat-form">
        <input
          id="msg"
          type="text"
          placeholder="Enter Message"
          required
          autocomplete="off"
        />
        <button class="btn" onclick="storeDetails()" ><i class="fas fa-paper-plane"  required ></i> Send</button>
      </form>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.9.4/qs.min.js" integrity="sha256-ijqLssetA1NMNjZ+w1zaUafQQLm4IW5OoM8O+4tatME=" crossorigin="anonymous">
    </script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="js/main.js"></script>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" ></script>


<script>
    var user_Id ='{{user.username}}';
    
    var socket = io.connect();
    const chatForm = document.getElementById('chat-form');

    socket.emit('friendList', user_Id );
        //get friend list
        $('#friendsList').submit(function(e){
            e.preventDefault();
            socket.emit('friendList', user.username );
            $('#data-id').val('');
        });

        socket.on('newFriendList', function(data){
            if(data.length !=0){
                for(i=0;i<data.length;i++){
                    console.log(data[i]['friendName'])
                    $('#friendlist').append('<p>'+
		                '<li class="friendsList" data-id="{{this.friendName}}">'+
                     <input type="submit" id="data-id" class="btn btn-primary chat-submit" value="{{this.friendName}}" style="border: 1px solid #2d2d2d ; padding: 6px 12px; cursor: pointer; color: #ccc;">
		                '</li>'
	                  '</p>');   
                  }
              }
         });

        function storeDetails() {
            fromUser = document.getElementById('from').value;
            toUser = document.getElementById('data-id').value;
            element = document.querySelectorAll(".chat-messages");
            socket.emit('userDetails',{fromUser,toUser}); //emits details of established chat
        }
    
        chatForm.addEventListener('submit', (e) => {
        e.preventDefault(); 
        const msg = e.target.elements.msg.value;
            final = {
                'fromUser':fromUser,
                'toUser':toUser,
                'msg':msg
            };
            socket.emit('chatMessage',final); //emits chat message with sender and reciever to server
            document.getElementById('msg').value=" ";
        });

        socket.on('output',(data) =>{
        console.log(data);
        });

        socket.on('output',(data) => { //recieves the entire chat history between two users and displays them
            for(var i=0; i<data.length;i++) {
                outputMessage(data[i]);
            }
            chatMessages.scrollTop=chatMessages.scrollHeight;
        });

        socket.on('message',(data) => {
                outputMessage(data);
                console.log(data);
            chatMessages.scrollTop=chatMessages.scrollHeight;
        });

        function outputMessage(message) {
            const div = document.createElement('div');
            div.classList.add('message');
            div.innerHTML=`<p class="meta">${message.from}<span> ${message.time}, ${message.date}</span></p>
            <p class ="text">
                ${message.message}
            </p>`;
            document.querySelector('.chat-messages').appendChild(div);
        }

</script>


